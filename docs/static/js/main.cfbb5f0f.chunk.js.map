{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGift","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGif","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mNAkCeA,EA/BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAgBrC,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACH,mCACVC,EAFa,iDAEmCC,UAAUH,GAF7C,6BACH,oCADG,SAGDI,MAAMF,GAHL,cAGbG,EAHa,gBAIEA,EAAIC,OAJN,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAcZM,GAdY,4CAAH,sDCYLO,EAVK,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAE7B,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCkBDO,EArBC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDL,SAACA,GAAc,IAAD,EACXd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAgBrC,OAVAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAEGqB,EDbyBK,CAAY1B,GAA/Ba,EAFe,EAErBN,KAAca,EAFO,EAEPA,QAErB,OACI,kBAAC,WAAD,KACI,wBAAIJ,UAAU,qCAAqChB,GAE/CoB,GAAW,uBAAGJ,UAAU,oCAAb,cAEf,yBAAKA,UAAU,aAEPH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,UEQvCkB,EArBM,WAAO,IAAD,EAEa1C,mBAAS,CAAC,cAFvB,mBAEhBQ,EAFgB,KAEJT,EAFI,KAIvB,OACI,kBAAC,WAAD,KACI,6CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQS,EAAWe,KAAI,SAAAT,GACX,OAAO,kBAAC,EAAD,CAAS2B,IAAK3B,EAAUA,SAAUA,UCZjE6B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.cfbb5f0f.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('')\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if(inputValue.trim().length > 2){\n            setCategories(categories => [inputValue, ...categories])\n            setInputValue('')\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","export const getGift = async (category) => {\n    const api_key = 'l2w5bVXKcfEZII0rPkiQ7Fw76p98vkm1'\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${api_key}`\n    const res = await fetch(url)\n    const {data} = await res.json()\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url\n        }\n    })\n\n    return gifs\n}","import React from 'react'\n\nconst GifGridItem = ({id, title, url}) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n\nexport default GifGridItem\n","import React, { Fragment } from 'react'\nimport { useFetchGif } from '../hooks/useFetchGif'\nimport GifGridItem from './GifGridItem'\n\nconst GifGrid = ({category}) => {\n\n    const {data: images, loading} = useFetchGif(category)\n\n    return (\n        <Fragment>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            {\n                loading && <p className=\"animate__animated animate__flash\">Loading...</p>\n            }\n            <div className=\"card-grid\">\n                {\n                    images.map(img => (\n                        <GifGridItem key={img.id} {...img} />\n                        ))\n                    }\n            </div>\n        </Fragment>\n    )\n}\n\nexport default GifGrid\n","import { useState, useEffect } from \"react\"\nimport { getGift } from \"../helpers/getGif\"\n\nexport const useFetchGif = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect(() => {\n        getGift(category)\n            .then(imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n            })\n    }, [category])\n\n    return state\n}","import React, { Fragment, useState } from 'react'\nimport AddCategory from './components/AddCategory'\nimport GifGrid from './components/GifGrid'\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Punch'])\n\n    return (\n        <Fragment>\n            <h2>GiftExpertApp</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr/>\n\n            <ol>\n                {\n                    categories.map(category => {\n                        return <GifGrid key={category} category={category} />\n                    })\n                }\n            </ol>\n        </Fragment>\n    )\n}\n\nexport default GifExpertApp","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport GifExpertApp from './GifExpertApp'\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}